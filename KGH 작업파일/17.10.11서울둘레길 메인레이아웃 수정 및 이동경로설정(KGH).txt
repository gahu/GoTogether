<기본적인 구조>



1번 탭info.png부분이 맨처음 들어갈때 메인 화면을 나타나게 한다. - information_introducation.xml

2번 탭 tour부분이 

3번 탭 행사부분은 없다.


<코딩 부분>
MainActivity

하단의 탭 5개를 제어하기위해서
인텐트로 .class information의 정보를 가져온다.
information은 fragment_activity.xml - ViewPager,Sliding의 정보를 담고있음.
(mainactivty에서 띄울것을  information에서 fragment_activty의 내용을 담아서 mainactivty는 던져주게된다고생각하면 된다.)
TourInfoFragment.java에서 이미지 뷰들을 담고 있는것을 -> Information에 가져온후 -> 메인에 뿌려준다. 
예)
   public Handler getPointInfoHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            PublicDefine.tourInfoFragment.setScroll();		//가져오는부분
        }
    };
}

1. activity_main.xml 파일
- 웹뷰 탭호스트, 들어갈때 화면나타낸다.
(둘레길코스이미지,둘레길 코스, 가이드)
 코스 위의 상단 화면 , 밑의 탭 호스트 

2. activity_intro.xml
처음들어갈때 화면 intro 화면 서울둘레길 기본 화면
(ImageView 사용으로 이미지만 띄워주었다.)

3.activity_image_popup.xml

4. fragment_activty.xml

- 메인화면에서 소개, 투어 , 행사 안내 슬라이딩바
(PagerSlidingTab)

- ViewPager를 사용하였는데, -> 소개,투어,행사 이미지를 붙여버리기위함이다.

- viewPager의 크기를 조정해보았음. -> 슬라이드넘기면서 소개부분을 만들기 위해

viewPager를 삭제하고 -> course.java 에서 오류난 viewpager부분을 가져옴.
information.java에서 오류난 부분잡음










// main에서 아예 인포메이션부분을 띄워버리장 menu.xml파일 생성

#수정 

#1 TourInfoPagerFragmentAdapter.java 내용 모두 지워버렸음
#2 TourInfoFragment.java 내용 모두 지움
#3 PublicDefine.java
 //public static TourInfoFragment tourInfoFragment; 내용 주석처리
#4 Information 
setContentView(R.layout.fragment_menu); 이것을 fragment_menu부분으로 바꾸어주었음.

<------이부분 주석 처리 함-------->

    private void initView() {
        viewPager = (ViewPager) findViewById(R.id.viewpager);   //ViewPager는 소개부분의 화면을 나타낸다.
        viewPager.setAdapter(new InformationPagerFragmentAdapter(getSupportFragmentManager()));
        // 소개부분의 화면을 어댑터로 붙여버리기위한 설정.

        // Give the PagerSlidingTabStrip the ViewPager
        tabsStrip = (PagerSlidingTabStrip) findViewById(R.id.tabs);     // 탭슬라이딩바 소개,투어,행사안내부분
        // Attach the view pager to the tab strip
        tabsStrip.setViewPager(viewPager);      // 탭 슬라이더에 viewPager를 붙여버린다.

        //탭 슬라이더 마다 LinearLayout의 형태로 붙여주기 위한것.
        Typeface type = Typeface.createFromAsset(getAssets(), "NotoSansCJKkr-DemiLight.otf");
        LinearLayout view = (LinearLayout) tabsStrip.getChildAt(0);
        int tabCount = view.getChildCount();
        for (int i = 0; i < tabCount; i++) {
            TextView textView = (TextView) view.getChildAt(i);      //
            textView.setTypeface(type);         // 글자 설정
            textView.setIncludeFontPadding(false);      // 폰트 패딩 설정
        }
    }

    public void setPager(int pagerNum) {
        viewPager.setCurrentItem(pagerNum);
        if (pagerNum == 1) {
            getPointInfoHandler.sendEmptyMessageDelayed(0, 300);        // 소개,투어,행사 넘길때딜레이 제어
        }
    }

    public Handler getPointInfoHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            PublicDefine.tourInfoFragment.setScroll();
        }
    };
   */

#5 // 여기부분은탭 눌렀을경우 어떻게 동작할지 결정하는 부분이다. 그래서 MenuAcitivy로 넣어주었다.

#6 PublicDefine 의 MenuActivity 추가함

public static MenuActivity menuActivity;        // 메뉴 엑티비티 추가함

#7 MenuActivty에 추가함.

package kr.go.seoul.seoultrail;

import android.os.Bundle;
import android.support.v4.view.ViewPager;

import com.astuetz.PagerSlidingTabStrip;

import kr.go.seoul.seoultrail.Common.PublicDefine;

/**
 * Created by ntsys on 2016-08-09.
 */
public class Information extends BaseActivity {

    private PagerSlidingTabStrip tabsStrip;
    private ViewPager viewPager;

    @Override
    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView(R.layout.fragment_menu);
        PublicDefine.information = this;
       // initView();         // 초기화 시킨다. information 클래스 아래 탭 두번째 기능
    }

/*
# 수정
정보 이미지 슬라이더 모두 지워버렸음


    private void initView() {
        viewPager = (ViewPager) findViewById(R.id.viewpager);   //ViewPager는 소개부분의 화면을 나타낸다.
        viewPager.setAdapter(new InformationPagerFragmentAdapter(getSupportFragmentManager()));
        // 소개부분의 화면을 어댑터로 붙여버리기위한 설정.

        // Give the PagerSlidingTabStrip the ViewPager
        tabsStrip = (PagerSlidingTabStrip) findViewById(R.id.tabs);     // 탭슬라이딩바 소개,투어,행사안내부분
        // Attach the view pager to the tab strip
        tabsStrip.setViewPager(viewPager);      // 탭 슬라이더에 viewPager를 붙여버린다.

        //탭 슬라이더 마다 LinearLayout의 형태로 붙여주기 위한것.
        Typeface type = Typeface.createFromAsset(getAssets(), "NotoSansCJKkr-DemiLight.otf");
        LinearLayout view = (LinearLayout) tabsStrip.getChildAt(0);
        int tabCount = view.getChildCount();
        for (int i = 0; i < tabCount; i++) {
            TextView textView = (TextView) view.getChildAt(i);      //
            textView.setTypeface(type);         // 글자 설정
            textView.setIncludeFontPadding(false);      // 폰트 패딩 설정
        }
    }

    public void setPager(int pagerNum) {
        viewPager.setCurrentItem(pagerNum);
        if (pagerNum == 1) {
            getPointInfoHandler.sendEmptyMessageDelayed(0, 300);        // 소개,투어,행사 넘길때딜레이 제어
        }
    }

    public Handler getPointInfoHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            PublicDefine.tourInfoFragment.setScroll();
        }
    };
   */
}

#8
AndroidManifest.xml
MenuActivty추가하기 -> Information대신에 -> 오류 잡기 성공!

#9 fragment_menu.xml 
Button 9개 추가
코스정보,행사안내,소개영상,스탬프,커뮤니티,공식카페,문의안내,카메라

#10
MenuActivity에서 버튼클릭시 이벤트 처리 하였음.
(총 9개 이벤트 처리 함)


#11
- Event.xml 파일 생성
- Event.java 파일 생성

#12 
MenuActivty에서 -> Event플래그먼트로해서 이미지만 받아오려고하고있으나 에러중인데 잡지를 못함.
간단한거인데 왜 오류가나지..

#13
추가된 파일 최종정리
1. 코스 정리   - Course.java 파일 기존의것 , - 코스 xml 파일 여러개의 프래그먼트로 이루어져서 사용된다.
2. 행사 안내	- Event.java 파일 추가, event.xml 파일 추가 (activty_event.xml로수정예정)
3. 소개 영상	- Video.java 파일 기존의것 사용, video_activity.xml 파일 기존의것 사용  
4. 스탬프	- Stamp.java 파일 추가, 코스 xml파일 프래그먼트 사용하면 될것같음. 데이터베이스
5. 커뮤니티	- Community.java파일 기존의것사용(아무런기능이없었음), community.xml 
6. 공식 카페	- Cafe.java 파일 추가 , xml파일은 필요없을것이라 판단 앱실행
7. 문의 안내	- FAQ.java 파일 추가, activity_faq.xml 파일 추가
8. 카메라	- Camera.java 파일 추가, 앱실행


<App Explain >
- 현재 MainActivity에서는 시스템적인 기능을 담당하고 있으며
- MainActivity 에서 -> MenuActivity를 맨처음 화면으로 호출하면서
어플리케이션 동작으로 구성하였음.
- MenuActivity를 MainActivity에 같이 넣을것인지 아닐것인지 Q&A
- 현재 MenuActivity에서 버튼클릭동작으로 -> 다른 Activity를 호출하면서 화면을
띄우고 있음. 현재 코스정보,소개영상 기능은 정상적으로 동작하고있으며, 나머지는
동작이 제대로 확인이 안되는데, 프래그먼트쪽 문제인것 같음(연결부분)
나머지 부분은 프래그먼트끼리 연결되어있어서 분리가 필요해 보인다.
- 코드 분리한 이후 어떻게 설계할것인지여부 확인
- 연결부분을 어떤식으로 좀더 유연하게 할것인지 ! 토의가 필요해보임
- 공식카페로 넘어가는 부분을 따로 Activity로 넘겨서 띄우는것이 아니라
MainActivity에서 바로 넘겨지고있는데 이부분이 잘 이해가 안갔음







